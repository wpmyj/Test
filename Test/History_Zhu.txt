+===========================================================+
+--------------------UDS Scanner项目历史__Zhu---------------+         
+===========================================================+

date 17.02.06
------------------------------------------------------------
@author zhu
1、增加属性页--模板，置于首页，添加类CPage_Profile
2、类中增加LoadProfile函数，用于在listBox控件列出所有模板。

date 17.02.07
------------------------------------------------------------
@author zhu
1、安装IPP后学习其中提供的两个Demo：ippiDemo.exe以及ippsDemo.exe。开始不能打开，提示缺失dll，把上一级目录下bin中的dll全部拷贝进Demo所在路径，成功打开exe。
2、简要熟悉了ippiDemo.exe，其中主要的功能分三部分：ippIP（常规图像处理），iPPCC（颜色转换），ippCV（计算机视觉）。
3、继续驱动界面的修改：最终确定【模板】界面有六个功能按钮：新建、重命名、删除、重置、导入、导出按钮，在listbox中显示所有模板。
4、将属性页“扫描/保存”按钮响应从CPage_Base移到CPage_Profile类中，直接从【模板】界面实现扫描。
5、实现“新建”、“删除”功能，对应函数为NewTemplate（）与OnProfile_Btn_Delete（）。并增加SetDelete（）函数用来判定当模板为原始给定模板、默认模板时，不能使用删除按钮。
6、增加对话框类CDlg_Rename，用来重命名模板；并在CPage_Profile类中增加SetRename（）函数用来判定当模板为原始给定模板、默认模板以及上次使用模板时，不能使用重命名按钮。重命名功能还未实现。

date 17.02.08
------------------------------------------------------------
@author zhu
1、在MFC_UI类中增加bool RenameProfile(string strOldName, string strNewName)函数，利用rename()实现重命名功能。
2、增加重置按钮响应事件:OnProfile_Btn_Reset()；直接回到默认模板。
3、MFC_UI类增加string GetProfileNamePath()，返回模板存放路径，不包括模板文件名。
4、增加导入按钮的消息响应OnProfile_Btn_Import（）使用CFileDialog类实现打开对话框导入模板功能。
5、增加导出按钮的消息响应OnProfile_Btn_Export（），实现导出模板功能。
6、删除基本界面的模板模块。

date 17.02.09
------------------------------------------------------------
@author zhu
1、CPage_Profile 类增加两个父类指针，CPage_Custom* m_pBasePage;CPage_Custom* m_pAdPage;分别Sheet_Scanner类中初始化时赋值为基本与高级界面类的实例化对象。
2、修改Bug：CPage_Profile::LoadTemplate()中，加载模板的同时更新基本与高级界面UpdateControls（），但基本界面更新后直接退出；
解决：修改CPage_Base类的InitComboPixType（）与BaseStatus（）函数中，EnableWindow（）的使用由指针改为变量。
3、UpdateData（FALSE）是用来更新当前对话框界面的，在模板对话框更新基本对话框会弹出“不支持尝试执行的操作”的警告。
4、修改基本界面排版，调整控件类型并开始功能的实现。完成扫描模式的功能实现。

date 17.02.10
------------------------------------------------------------
@author zhu
1、修改基本界面排版，将多流输出由高级界面调整到基本界面，与单双面一起互斥为三个Radio。
2、解决单面、双面、多流状态未保存的Bug：原因是三者之间共用的int型value变量m_radiobtn_duplex的值互相影响了，并且在构造函数中，MFC会自动添加其值得初始化值，默认为-1，因此初始时总是未选中。
3、完成多流输出、单双面之间的参数联动，实现多流的功能。
4、将高级界面的纸张大小调到基本界面。完成相关功能实现。
5、完成基本界面修改。

date 17.02.13
------------------------------------------------------------
@author zhu
1、将基本界面“帮助”按钮调整到属性页上与“扫描”等按钮在一行；增加“帮助”按钮响应事件CSheet_Scanner::OnButtonCopy()执行ShellExecute（）。
2、同样增加“预览”按钮及其消息响应函数：OnButtonPreView（）。
3、增加CSheet_Scanner::SetPreViewStatus（）判断预览按钮是否可用
4、由于Sheet_Scanner类与MFC_UI类之间重复包含，在MFC_UI.h中没有包含#include "Sheet_Scanner.h"，所以在几个属性页中使用m_pUI->m_pSheet->SetPreViewStatus();时出现error:不允许指针指向不完整的类类型。为了不再各个属性页的cpp文件中都包含Sheet_Scanner.h，直接在MFC_UI类中增加PreViewStatus（）函数，利用MFC_UI的成员变量CSheet_Scanner* m_pSheet调用SetPreViewStatus（)。
5、为每个属性页都重载OnSetActive（）函数：该函数是CPropertyPage的成员函数，当选择某一页将其变为活动页时，框架会调用这个成员函数。这里重载此成员函数来执行m_pUI->PreViewStatus()；功能：只有在基本界面“预览”按钮才可用。
6、重载“关于”界面的构造函数为CPage_About(MFC_UI *pUI)，并增加成员变量MFC_UI  *m_pUI;

date 17.02.14
------------------------------------------------------------
@author zhu
1、查找IPP相关资料，主要熟悉文档第四章图像处理相关函数
2、将高级界面原纸张大小相关参数：宽，高，单位移到基本界面
3、调试表单sheet类预览按钮响应函数PreView():由于该函数是sheet类成员，但对应函数需要实现的功能却是与Base界面相关的，因此在Base类中添加同名成员函数，在sheet类中直接使用base类的实例化对象m_p_basepage调用同名成员函数。
   在base类的PreView()中借用CTWAINDS_UDS类的指针得到图像数据，但在显示到图片控件时遇到问题，没有bitmap数据头，需要自己写，代码编写中

date 17.02.15
------------------------------------------------------------
@author zhu
1、将黑白图相关参数：二值化与其Combobox移到基本界面，并且将之前的阈值滑动条关联两个Cap：阈值和去除斑点。
2、添加CPage_Base::SetBinarization（）函数设置参数联动：当多流黑白选中与单面或双面选中时，要设置二值化，当二值化为固定阈值时，对应ICAP_THRESHOLD；动态阈值时对应UDSCAP_SENSITIVETHRESHOLD_REMOVESPOTS（去除斑点）。
3、解决初始图像为彩色，阈值edit却可用的Bug：InitComboPixType（）由UpdateControl(）改到OnInitDialog（）中，因为后面SetBinarization（）时又设置回去了，因此放在OnInitDialog（）中，且在SetBinarization（）后。
4、在高级界面为图像拆分增加“自定义”选项，以及选中后下面的水平、垂直Radio以及edit（几等份）可用。但自定义等份功能未实现。
5、调整高级界面控件布局。

date 17.02.16
------------------------------------------------------------
@author zhu
1、增加【纸张】页面，将纸张大小、单位、宽高由基本界面移到纸张界面
2、在纸张界面增加X、Y偏移量以及边缘扩充：上下左右。采用滚动条控制edit显示的值。
3、增加int CPage_Paper::FindUnit(int index),返回单位的值
4、增加CPage_Paper::SetScroll，根据edit的值更新滚动条的值；以及设定滚动条的不同的范围和edit显示值得取值区间，当为英寸和厘米时，显示小数点后两位，其他比如像素、点等均直接显示整数。
5、解决Bug:重载滚动条响应OnVScroll（）时，改变其他滚动条都只控制一个edit的问题。
 方法：在OnVScroll（）的参数里有形参CScrollBar* pScrollBar，根据指针GetDlgCtrlID（），就能够判断是哪一个滚动条改变。
6、实现宽、高滚动条与edit的值同步。


date 17.02.17
------------------------------------------------------------
@author zhu
1、增加边缘扩充-上下左右的Cap：UDSCAP_EDGE_UP、UDSCAP_EDGE_DOWN、UDSCAP_EDGE_LEFT、UDSCAP_EDGE_RIGHT；并在CTWAINDS_UDS类中增加其初始化与值。
2、CPage_Paper类中根据容器值在edit中显示对应值，并且扫描时SetCapValue()时保存edit中的值
3、增加X、Y偏移量的Cap：UDSCAP_XPOS，UDSCAP_YPOS，及其相关功能。
4、重载OnPaint（）函数，在图片控件上侧与左侧手动绘制两个标尺，用来实时显示纸张大小的尺寸。

date 17.02.20
------------------------------------------------------------
@author zhu
1、在纸张界面增加【压缩】Combox选项以及对应JPEG压缩比：滑动条与edit。combox显示压缩类型，对应Cap为TWAIN自带Cap--ICAP_COMPRESSION，选项为自动、JPEG、G4;滑动条范围为0--100，对应Cap为自定义Cap：UDSCAP_COMPRESSVALUE；完成两者对应参数更新与保存的功能。
2、为基本界面多流的六个checkBox增加相应的按钮，使得点击按钮能够为每一张多流图像设置不同的参数。
3、实现在点击checkBox时，对应的按钮选中：在设置按钮高亮时，仅仅设置m_btn_backbw.SetFocus();m_btn_backbw.SetState()不够，还需要m_btn_backbw.SetButtonStyle(BS_DEFPUSHBUTTON)手动设置按钮的"Default"属性。
4、解决“多流”在不点击时，不输出多张图片的bug:在CPage_Base类的SetCapValue（）时，原来有根据int型变量m_radiobtn_duplex判断是否需要进行SetCapValueInt，实际上此处不需要再判断一次了，反而使得checkbox没有响应时，m_radiobtn_duplex变量不会重新赋值，不满足SetCapValueInt的条件。与control型radio变量不同，若是control型变量才需要判断GetCheck()。
5、解决选中双面，也出两张图，但是第二次打开界面是单面的Bug:SetFlat()中变量判断错误，又将m_radiobtn_duplex设为0了。

date 17.02.21
------------------------------------------------------------
@author zhu
1、完成新导入模板功能，界面更新以及参数生效（TW_LoadProfileFromFile）
2、解决模板问题：选中新建的模板时，修改其他参数，参数未生效问题。OnOK（）时只保存了上次使用模板，应该针对列表选中模板再次保存（注：必须是新建的模板才需再次保存）。问题解决。
3、多流Bug:上次多流正常扫描，再次打开驱动时直接退出
解决：初始化加载模板，m_pBasePage->UpdateControls()时，在SetMultistream中，使用了GetDlgItem(IDC_CHECK_FRONTGRAY)->EnableWindow(TRUE)的语句初始化界面。将初始化用到的所有使用GetDlgItem(ID)调用EnableWindow（）的地方全部改为成员变量调用。
4、解决多流相关Bug：首次扫描时，只有先点击了双面，再点击多流，多流才生效
方法：在Radio响应函数OnBase_RadioBtn_Duplex（）中，为scanside赋值要在scanside外，该变量与高级界面的SetCapValue()中的case UDSCAP_SPLITIMAGE（图像拆分）息息相关，当没有该变量赋值（默认为0）时，高级界面会把图像张数设为1。将scanside = m_radiobtn_duplex;放在UpdateControl();中，实时更新。
5、总结CScanner_OpenCV类中所用opencv相关函数以及所需图像数据的每一行的字节数、行数、列数、图像深度、通道数等。

date 17.02.22
------------------------------------------------------------
@author zhu
1、为模板导出功能由SHBrowseForFolder改为CFileDialog实现，导出的同时增加重命名的功能。

date 17.02.23
------------------------------------------------------------
@author zhu
1、删除之前增加的CTWAINDS_Base类的getUDSDIBImage（），重写CTWAIN_UI::PreView()函数，为图片数据手动增加文件头，信息头，调色板等，增加FillZero（）函数为数据补零，实现4字节对齐。
2、在CPage_Base::PreView()中通过m_pUI->PreView()得到数据，通过CFile类依次将文件头，信息头，调色板，以及图像数据，以此来测试数据是否正确。最终得到正确的图像数据。
3、利用CDC以及StretchDIBits（）在图片控件绘图，但保存的图片正确，图片控件却没有显示图片。改为CreateDIBitmap()与StretchBlt()实现图片显示，但是只能显示彩色图片，不能显示灰度图，黑白图的图像区域随机出现不同彩色，但是保存下来的图像正确。

date 17.02.24
------------------------------------------------------------
@author zhu
1、放弃直接绘图的方式，采用CFile读图的形式显示图片，仍然存在昨天的问题。最终采用opencv实现，仿照opencv的CvvImage类的DrawToHDC（），为CPage_Base类增加四个成员函数：NormalizeRect（）用来标准化处理rect区域，使其高度和宽度均为正值,当左侧坐标大于右侧坐标，上侧坐标大于下侧坐标时使用,互换；FillBitmapInfo用来写入信息头和调色板；RectToCvRect将坐标类型由Rect转为opencv能用的CvRect；Show（）使用DIB位图和颜色数据对dc上的指定矩形中的像素进行设置；最终使用DrawToHDC（）在指定dDCDst根据pDstRect绘图。完成黑白、灰度、彩色图片的预览功能。
2、解决“预览”后不能直接扫描，并且只能预览一次的Bug:在CTWAINDS_Base::DoXferReadyEvent()中，getImageInfo（）之前把m_CurrentState状态设为了dsState_XferReady了，所以当下次再次判断dsState_Enabled != m_CurrentState时，条件为真，使得DoXferReadyEvent（）返回false，没有后续的getImageInfo与_DSM_Entry（）。
解决方法：在CTWAIN_UI::PreView()函数的末尾将状态设回5：m_pDS->m_CurrentState = dsState_Enabled;但同时需要将CTWAINDS_Base类的成员m_CurrentState由protected改为public。问题解决。
3、防止图片显示在控件中失真，增加自适应图片控件的操作。
4、利用CRectTracker，响应OnLButtonDown实现在CPage_Paper的图片控件上画矩形。

date 17.02.27
------------------------------------------------------------
@author zhu
1、解决未扫描、直接从基本界面预览，图像下侧有部分数据丢失的Bug。在预览时，未响应CPage_Paper的SetCapValue，没有设置纸张大小。
2、完成OnPaint（）中，根据单位选值，分别画不同的标尺的功能。

date 17.02.28
------------------------------------------------------------
@author zhu
1、为CPage_Paper类增加两个成员m_standarindex，m_unitindex分别用来保存最开始纸张大小、单位选中项的索引值
2、在成员函数UpdatePicRectangle（int index, int unitindex）中，首先设置SetCapValueInt单位、纸张大小，再通过GetCurrentFrame得到当前纸张大小，并根据单位索引值对应的单位值计算该纸张大小值在图片控件下的大小。最后使用CDC->Rectangle与CPen绘红色矩形框.。
3、解决绘图时图像只绘制，不删除上次矩形图的Bug:在UpdatePicRectangle开始时InvalidateRect(NULL);再UpdateWindow();问题解决。
4、遗留一个问题：在界面初始打开时，响应UpdatePicRectangle（）函数，并不会画图，调试未找见问题。
5、调整CScanner_OpenCV类的图像锐化操作的代码：将Laplacian换为Sobel算子，但是不直接计算，而是分别计算x方向和y方向的导数，最后用两个方向的倒数去模拟梯度，最后将得到的grad与原图融合，得到的图像没有过去锐化，效果比直接使用Sobel算子要好。

date 17.03.1
------------------------------------------------------------
@author zhu
1、结合G系列驱动，删除纸张大小：A3、ISOB4、JISB4三个选项
2、调整单位选项为像素时，需要根据基本界面的分辨率调节对应的标尺，不同的分辨率，像素范围不同。
3、完善了纸张界面改变纸张大小，宽、高根据单位随之的变化以及图片控件上矩形框的变化。
4、暂时隐藏高级界面纸张自定义选项以及水平、垂直、输入edit
5、翻阅资料，使用PS常用的USM（unsharp mask）锐化方法对图像进行锐化，对比昨天的sobel算子锐化效果，该算法提取的边缘更准确，效果更好。
6、使用开运算操作（形态学算法：先腐蚀再膨胀）做去网纹的处理。结合OpenCV中的erode（腐蚀）、dilate（膨胀）函数，测试其去网纹的效果，但效果不好。接着直接采用GaussianBlur（）去网纹，效果相对于开运算有明显改善。

date 17.03.2
------------------------------------------------------------
@author zhu
1、为了实现去除背景功能，寻找更好的二值化算法，主要对比了OTSU与一维最大熵算法。在OpenCV类中增加int CScanner_OpenCV::otsu(Mat image) 算法以及Mat CScanner_OpenCV::MaxEntropy(Mat src, Mat &dst)最大熵算法，其中最大熵算法中求取了图像的直方图。在测试环境下，直接使用MaxEntropy得到的目标图像颜色有些失真，换为int CScanner_OpenCV::GetMaxEntropy(Mat src),得到一维熵最大时的阈值，将该阈值用于二值化；同样OTSU也得到类间方差最大时的阈值。对比两个阈值，认为还是OTSU算法得到的阈值更合适，采用OTSU算法。但直接二值化的图像为黑白图像，因此最后遍历整幅图像，将黑白图中为黑的像素点设置为原图中对应点的像素；其他为白的像素点则设置为白。但是还是因为阈值的问题，测试图片中有部分也被认为是背景去除了。完成去背景的操作。
2、为CPage_Paper类增加六个edit响应OnEnChangeBase_Edit_EdgeDown，响应在edit输入值时，同时改变滚动条以及m_papermap对应的值。
3、在CScanner_OpenCV类的preScanPrep() 中增加X、Y偏移量以及上下左右--边缘扩充的功能。利用opencv的copyMakeBorder函数实现边缘扩充的功能。

date 17.03.3

------------------------------------------------------------
@author zhu
//1、CPage_Paper::UpdateControls中，边缘扩充相关edit的值需要根据单位的选项进行修改，完成值之间的转换。未完成
1、界面增加色彩翻转功能，CScanner_OpenCV类实现该功能。
2、为G6x00系列驱动服务，界面增加缓存模式功能，选择项有自动、纸张数量、内存大小；并且增加滑动条设置对应的值，edit显示值。注意在edit输入时，需要使用SetSel设置光标位置一直在字符串后面。
3、重新调整自动裁切与校正、去穿孔所用图片，全部改为200dpi的图像；
解决cvGet2D崩溃的Bug；
同时调整算法中所需的阈值，完成自动裁切与校正以及去穿孔的算法优化。

date 17.03.6

------------------------------------------------------------
@author zhu
1、解决SmartScan软件使用DS驱动，模板未生效的Bug：在CTWAINDS_UDS::openDS中增加加载模板的操作，这样使App上设置的参数优先级更高，同时DS里其他参数也能生效；若在CTWAINDS_UDS::enableDS中加载模板，APP设置的参数将完全无效，扫描仪完全按照DS设置的参数扫描。
2、为各Page类的UpdateControls（）增加操作，每个参数更新时，都往Map中存入当前值，保证Map随容器一起更新
3、解决默认模板扫描时，纸张界面参数不更新的问题：在CPage_Profile::LoadTemplate()中增加m_pPaperPage->UpdateControls();的操作，但是会有“出现不适当参数”的Bug,发现问题在于UpdateControls（）中使用了SetWindowText函数，将之改为SetDlgItemText(IDC_PAPER_EDIT_WIDTH, strText);问题解决。

date 17.03.7

------------------------------------------------------------
@author zhu
1、将基本界面扫描模式的checkBox变量由int型改为control型，从而解决界面初始为平板时，双面、多流本该为不可用但是却可用的Bug，int型的变量虽然赋值正确，但是没有控制界面SetCheck(TRUE)。
2、注释掉CPage_Paper::OnLButtonDown（）,暂时不增加手动画框选择区域的功能
3、为纸张大小增加“自动”选项，解决纸张大小切换出现“参数错误”的Bug;
4、结合G系列所需功能，为高级界面的增加一个checkBox选项，显示重叠进纸时是否暂停扫描，新增CAPUDSCAP_MULTIFEEDDETECT_VALUE，及其功能。

date 17.03.8

------------------------------------------------------------
@author zhu
1、修改高级界面缓存模式显示值，由edit改为static，去掉手动输入的功能。
2、解决重置默认模板，虽然从模板读取值正确，但是FindPaperSize（）只能找到序号0对应的值得Bug：当在模板界面重置时，combo设置了选中index，但是界面没有UpdateData(FALSE)(UpdateControls()里不能又该操作)，所以原来找选中index对应的字符串的方法不可用，改为switch选中index的方法，问题解决。
3、测试原GL2驱动，请教了赵工与佟老师关于XY偏移量的取值范围的意义，从而设置XY偏移量与上下左右边缘扩展的范围；实现这六个值根据单位的选择，设置不同的范围，以及输入不同类型的值。
4、与李浚魁讨论后，针对去除背景功能不完美的bug,借鉴直方图统计的方法，重新编写去背景的算法。

date 17.03.9

------------------------------------------------------------
@author zhu
1、解决XY偏移量与上下左右边缘扩展值未保存进模板的Bug：不是未保存，而是在单位转换时出错。
2、增加SetPaperSize（）函数用来设置当纸张选中“长纸模式”时，高只显示最大的值，不可输入与调整,并且根据单位改变。
3、发现Bug:由于之前为了实时响应界面，在纸张大小和单位的combo改变后，会先设置生效，再设置回界面一开始的值；这样产生一个问题是在改变了单位，再改变纸张时，会又把单位设置回原始状态，不能保存当前设置。
4、为解决问题3，修改纸张界面的设置模板生效的时间，由点击确定时生效改为一旦改变即生效；同时在OnOK时多保存一份备份模板，在用户点击取消时加载。
5、解决根据4修改后，滚动滑动条的值多次点击单位更换时，值持续增加的Bug：只在edit改变时设置SetCapFloat,在OnVScroll时不设置。
6、测试基于直方图统计（opencv中的calcHist函数）的去背景方法，该方法是计算出每个灰度级的像素个数（概率），原意是想得到最大概率，再根据其对应的灰度级重设图像像素，但测试图像中有些图像不是背景所占概率最高，方法也不可行。
7、采用轮廓提取（findContours）的办法，想要先分离出前景与背景，但是findContours的输入仍然需要时二值图像，所以仍然受阈值影响，试验后该算法也不理想。

date 17.03.10

------------------------------------------------------------
@author zhu
1、修改XY偏移量实现，X偏移量应该是向左不是向右，Y偏移量是向上，不是向下

date 17.03.11

------------------------------------------------------------
@author zhu
1、完成自动纠偏,但是对缩小后的图像处理,图像有丢失,对原图处理,速度较慢;未测试去黑边.
2、完成自动纠偏与裁切功能：纠偏时先缩小图像，算出角度，最后在对原图处理，提高速度。采用从左上角与右下角遍历的方法，找出图形的四边，进行裁切，但是因为图像在扫描过程中数据就有缺失，所以裁切后的图像还会有部分黑色区域。
3、暂时隐藏去除穿孔功能，算法未优化；隐藏帮助按钮功能，帮助文档未完善。

date 17.03.13

------------------------------------------------------------
@author zhu
1、测试G6600，自动纠偏与裁切功能未影响扫描速度。
2、改进去穿孔算法，在RemovePunch中用的HoughCirclesTransfer里面做HoughCircles（霍夫圆变换时），为该函数的最后一个参数：检测到的圆半径的最大值做一个限制；由于该功能主要用于快递单号上的去穿孔，而根据分辨率的不同，穿孔的半径是大概已知的，根据计算得到一个大概的半径值，将最后一个参数限定在其1.5倍内。算法测试中。
3、先是利用Cximage的IncreaseBpp函数增加位深，但是测试发现对于Buffer没有用，于是换另一种办法：在CScanner_G6X00::acquireImage()中，在扫描之前判断若是黑白图像，就按照灰度扫描，在preScanPrep之前再重新设置m_nPixelType为黑白（TWPT_BW）；这样扫描后的图像即是黑白图像。但是传给APP的图像错位，原因是在CTWAINDS_UDS::getImageInfo中，之前将_pImageInfo->BitsPerPixel设置为1了，按照上述方法，此处应该与灰度一致，应该为8.修改后，问题解决，能够扫描黑白图像。

date 17.03.14

------------------------------------------------------------
@author zhu
1、修改CScanner_G6X00类的RemoveBlack函数，由原来的返回Mat修改为返回Rect区域，在去除穿孔RemovePunch函数中，也使用RemoveBlack函数，只对数据区域做处理，不是对整张图像处理。（之前去穿孔算法为了加快速度，只扫描了四周十分之一的区域，因此在G系列按A4等大于快递单的纸张扫描时，图像的左右，下侧均有大幅面的黑边）。采用设置除黑边外图像数据为感兴趣区域的方法，再使用原去穿孔算法，并结合穿孔的尺寸的先验信息，完善了去穿孔算法。
2、隐藏缓存模式相关控件。
3、测试当前版本驱动，界面及功能：发现纸张界面Bug：单位选择厘米时，所有滑动条均无效，但单位选择像素或英寸时有效；逐句调试，发现在设置对应edit值时，不是没有生效，而是在做厘米到英寸的转换时，0.01厘米转为英寸为0.0039，又由于精度限制，所以最终返回均为0.00，但是输入edit值不存在这种问题。修复Bug，在此处不做转换，而是在设范围时转换。问题解决。

date 17.03.15

------------------------------------------------------------
@author zhu
1、修改模板新建重名时操作，重名时点击“重新创建”确定按钮后，保存模板，但不往列表中增加;并且选中已存在的重名。
2、同样修改重命名时的操作，与1操作一致。
3、增加CPage_Base::DrawImage(void)函数，由之前在PreView中画图改到OnPaint（）中画图，在OnSetActive（）只需刷新Invalidate（），从而实现属性页面切换时，预览界面显示的预览图不消失。
4、CPage_Base类增加两个成员函数GetTempSavePath与CreateDir创建临时文件夹来存储预览的图片，防止在非管理员允许时，不能往驱动文件夹写图片的Bug。
5、增加void CPage_Paper::SetXYPos()，设置纸张大小选择自动、USLetter、USLegal时，XY偏移量部分不可用；因为此时范围最大，调节滑动条也无效，直接设置为不可用。在FindPaperSize中调用。
6、解决回复默认模板，从平板不能回到自动进纸器的Bug，调试发现从容器读取的返回值均正确，获取m_radiobtn_scanmode变量值也正确，找不见错误原因，最后将更新与下一个调换位置后，问题解决。但是在下一个更新里面没有修改m_radiobtn_scanmode的值。最后暂时隐藏平板选项。

date 17.03.16

------------------------------------------------------------
@author zhu
1、解决纸张界面，单位与纸张切换时，预览界面上矩形框消失的Bug：在单位改变时也UpdatePicRectangle刷新界面。
2、解决驱动不预览时，改变基本界面的参数，直接保存，程序连同上层APP一起崩溃退出的Bug：首次安装驱动后，没有预览，在临时路径下就没有对应的图片；而在OnPaint中响应画图DrawImage时，opencv加载图像就失败了，IplImage类的指针img为NULL，导致后面获取宽高等出错，程序崩溃；解决办法，加载图片后判断指针是否为NULL，为NULL时不操作，问题解决。
3、为界面所有edit设置限制，对比度、亮度只能输入整数，不能输入小数点，允许输入负号；阈值、去除空白页的比例edit不允许输入负号，不允许输入小数点，只能输入整数；XY偏移量，上下左右边缘扩充以及Gamma校正edit允许输入小数，且只能输入一个小数点，不能输入负号。

date 17.03.17

------------------------------------------------------------
@author zhu
1、添加需求:当基本界面的多流选中时，高级界面的拆分不可用；并且界面切换间要实时更新，因此基本界面的单双面与多流实时设置有效，且在CPage_Advanced::OnSetActive中也要SetSpiltimage（）；
2、退出驱动时，删除临时路径下的预览图片，使得驱动再次打开时，不会显示在界面。
3、在edit的响应事件中OnEnChangeBase_Edit_EdgeXpos设置edit的值一直不对，直接导致程序崩溃。最终采取在往Map中存值时，若太大则存最大值，小于0就存0的的方法，使输入数据不会超过范围，但是在界面还是不能实时改回范围内的值。

date 17.03.20

------------------------------------------------------------
@author zhu
1、设置基本界面：当设备为1（即虚拟扫描仪）时，才可使用多流；其他设备禁用多流及多流六个选项。
2、开放纸张界面“预览”按钮的使用：并且按照纸张设置大小（不是预览框的大小）显示预览图片。
3、编写扫描仪帮助文档。

date 17.03.21

------------------------------------------------------------
@author zhu
1、二值化只保留固定阈值。

date 17.03.22

------------------------------------------------------------
@author zhu
1、新增两个界面【设置界面】与【信息界面】。
2、设置界面包括两个参数：启动节电模式与关机时间，分别对应滑动条来调节时间，单位分钟。完成往模板的添加及相关Cap的设置。
3、信息界面主要是一个listbox控件来显示硬件信息等，还有一个“报告”按钮，来打开本地报告文件。在listbox上尝试自绘两个按钮来响应分纸轮与进纸轮清零的操作，但是出现了“不支持尝试的操作”的Bug，待解决。
4、重写自动裁切与纠偏算法，暂定算法步骤为：先使用Canny算子做边缘检测，再检测出最外侧的四条直线，去除四边的三角黑色区域，最后计算角度，做仿射变换。

date 17.03.23

------------------------------------------------------------
@author zhu
1、解决“不支持尝试的操作”的Bug，在自绘按钮时，不用在DoDataExchange中做控件关联DDX_Control。
2、添加节点模式时间与关机时间的关联：关机时间必须大于节电模式设置的时间，但在当关机时间小于节点模式时间时，重新设置滑动条位置SetPos后，控件就不会再刷新了，一直保持在新位置，未找见问题所在，最后退而求其次，不设置位置，而只是重设置后面static显示的值。
3、继续自动裁切与校正算法的修正：对图像做了Canny边缘检测后，想要在图中划线段，但是一直都没有画出了，后来发现是Canny检测后，图像为灰度图像了，所以用红线画线段无效，采用cvtColor将图像从Gray转为BGR，不过该图只是名义上的彩图，可以用来画线，但是并没有填补三色。
4、标准霍夫变换HoughLines检测出来很多条直线，无法找出边缘的线段，于是采用概率霍夫变换（HoughLinesP），通过后两个参数（最短线段的长度与允许将同行点与点之间连接起来的最大距离）可以刷选出想要长度的线段。
5、找出上述线段中最长的一条，只保留一条，计算其角度。

date 17.03.24

------------------------------------------------------------
@author zhu
1、完成AutoCorret算法，各个角度都已测试，旋转方向均正确，但是检测出来的直线正确，算出来的角度也正确，但是在做仿射变换时，总是会有一点点的角度未完全旋转。

date 17.03.28

------------------------------------------------------------
@author zhu
1、重写AutoCorret算法中角度的计算公式，之前虽然得到的最终图像看似正确，但实际角度是错误的。之前得到的角度是弧度值，我却一直在按角度计算，修改其得到的最终角为角度。另外是图像左斜与右斜时，算法做的旋转角度不同：右斜时，正确角度应该是与x轴的夹角，左斜时角度是与y轴的夹角；算法中右斜时正常逆时针旋转，左斜时逆时针旋转角度后还需要再旋转90度。最终自动裁切与旋转算法优化完成。